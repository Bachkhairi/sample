name: Smart Versioning and Tagging

on:
  push:
    branches: [main]

jobs:
  versioning:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full history for comparison

      - name: Setup Git
        run: |
          git config user.name "Bachhamba Khaireddine"
          git config user.email "khaireddine.bachhamba@ept.ucar.tn"

      - name: Determine version bump type
        id: version-bump
        run: |
          # Get latest tag
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
          echo "Current version: $LATEST_TAG"

          # Get commits since last tag (or all commits if no tag)
          if [ "$LATEST_TAG" != "v0.1.0" ]; then
            COMMITS_SINCE_LAST_TAG=$(git log $LATEST_TAG..HEAD --pretty=format:"%s")
          else
            COMMITS_SINCE_LAST_TAG=$(git log --pretty=format:"%s")
          fi

          # Initialize bump type as PATCH (default)
          BUMP_TYPE="PATCH"

          # Check commit messages for MAJOR/MINOR indicators
          if echo "$COMMITS_SINCE_LAST_TAG" | grep -qE '^(feat|break|major)(\(.*\))?!:'; then
            BUMP_TYPE="MAJOR"
          elif echo "$COMMITS_SINCE_LAST_TAG" | grep -qE '^(feat|feature)(\(.*\))?:'; then
            BUMP_TYPE="MINOR"
          fi

          # Fallback: Check file changes if no conventional commits
          if [ "$BUMP_TYPE" = "PATCH" ]; then
            CHANGED_FILES=$(git diff --name-only $LATEST_TAG HEAD -- .)
            if echo "$CHANGED_FILES" | grep -qE '^src/.*\.(ts|js|py|java)$'; then
              BUMP_TYPE="MINOR"
            fi
          fi

          echo "Detected change type: $BUMP_TYPE"
          echo "BUMP_TYPE=$BUMP_TYPE" >> $GITHUB_ENV

      - name: Calculate new version
        id: calculate-version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
          TAG_NUM=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$TAG_NUM"

          case "$BUMP_TYPE" in
            "MAJOR")
              NEW_MAJOR=$((MAJOR + 1))
              NEW_TAG="v$NEW_MAJOR.0.0"
              ;;
            "MINOR")
              NEW_MINOR=$((MINOR + 1))
              NEW_TAG="v$MAJOR.$NEW_MINOR.0"
              ;;
            *)
              NEW_PATCH=$((PATCH + 1))
              NEW_TAG="v$MAJOR.$MINOR.$NEW_PATCH"
              ;;
          esac

          echo "New version: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git tag $NEW_TAG
          git push origin $NEW_TAG
        env:
          NEW_TAG: ${{ env.NEW_TAG }}
